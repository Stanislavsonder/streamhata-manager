@use "sass:map";
@use "sass:list";

$grid-breakpoints: (
	mobile: 0,
	tablet: 768px,
	desctop: 1024px,
) !default;

/*
 * Maximum breakpoint width. Null for the largest (last) breakpoint.
 */
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	$next: breakpoint-next($name, $breakpoints);
	@return if($next, breakpoint-min($next, $breakpoints) - 0.02, null);
}

/*
 * Minimum breakpoint width. Null for the smallest (first) breakpoint.
 */
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $name);

	@return if($min != 0, $min, null);
}

/*
 * Name of the next breakpoint, or null for the last breakpoint.
 */
@function breakpoint-next(
	$name,
	$breakpoints: $grid-breakpoints,
	$breakpoint-names: map-keys($breakpoints)
) {
	$n: index($breakpoint-names, $name);
	@return if(
		$n != null and $n < length($breakpoint-names),
		nth($breakpoint-names, $n + 1),
		null
	);
}

/*
 *  Media that spans multiple breakpoint widths.
 */
@mixin media-breakpoint-between(
	$lower,
	$upper,
	$breakpoints: $grid-breakpoints
) {
	$min: breakpoint-min($lower, $breakpoints);
	$max: breakpoint-max($upper, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include media-up($lower, $breakpoints) {
			@content;
		}
	} @else if $min == null {
		@include media-down($upper, $breakpoints) {
			@content;
		}
	}
}

/*
 * Media of at most the maximum breakpoint width. No query for the largest breakpoint.
 */
@mixin media-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);

	@if $max {
		@media (max-width: $max) {
			@content;
		}
	} @else {
		@content;
	}
}

/*
 * Media between the breakpoint's minimum and maximum widths.
 */
@mixin media-only($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	$max: breakpoint-max($name, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include media-up($name, $breakpoints) {
			@content;
		}
	} @else if $min == null {
		@include media-down($name, $breakpoints) {
			@content;
		}
	}
}

/*
 * Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
 */
@mixin media-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@content;
	}
}
